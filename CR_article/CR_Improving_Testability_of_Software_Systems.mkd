# CP : Improving Testability of Software Systems that Include a Learning Feature

Le but de cette Article et d'exprimer les propriétés  qui pourront être utile lors de l'évaluation de la qualité d'une application prenant en compte la dimension de l'apprentissage.

1. Introduction

            Aujourd'hui les Intelligence Artificielle (IA) prenne de plus en plus une part importante dans les systemes informatiques.
            De ce faite chaque App ou systeme promettront de plus en plus une experience personnalisée pour chaque utilisateur, et donc améliorer leur satisfaction.
            Cependant des problemes de securités sont encore regulierement reportés.

            Dans cette article on reporteles lessons apprises dans un cas d'application constituée d'une interface d'apprentissage.

2. Machine learning et Validation

            On considère dans cette section la validation des algorithmes de la machine, du niveau du syteme et du point de vu de la testabilité.
            
    1. Validation des algorithmes
    
        Il existe differents types de Learning Machine (ML)
        On attend d'une ML qu'elle fasse de bonnes prédictions, apres un temps d'apprentissage.
        La premiere partie de la validation et de verifier la qualité de ses prédictions.

        Les mesures de performences sont spécifiques aux types d'algorithmes évalués.

    2. Validation du systeme final

        La validation d'un systeme ayant un systeme d'apprentissage est compliqué.

        L'application de ce genre de systeme n'est pas facile a predire car il varie avec le respect de l'environnement.

        Meme pour un utilisateur spécifique ses besoin peuvent evoluer avec le temps. Ce qui rend la spécification impossible à exprimer precisemment. Pour les meme raison il est tres difficil de determiner les characteristiques de l'environnement du système final.

        Pour pouvoir tester une maison intelligente qui régule la temperature, necessite de pouvoir changer la temperature de celle-ci pour verifier que le systeme reagi correctement. Cependant trop chauffer une piece l'hiver pour voir si le systeme la reffroidit est innaceptable.
        
        Pour cette raison le systeme finale est generalement tester dans un envirronement simulé avant de deploiement. Pour la validation le monitoring est préféré. Cela consiste en l'observation des output sans controller les inputs.

    3. Un point de vue de testabilité du génie logiciel


3. Etude de Cas

    1. L'Application testée

    2. Le harnais de validation

4. Exprimer les propriétés

5. Les leçons apprisent 

6. Conclusions et perspectives


[retour page J2](../journal/j2.mkd)

[retour page principale](../ListeDeNotes.mkd)